name: Deploy Python App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate SSH Key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          chmod 600 ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa.pub
          echo "SSH key pair generated."

      - name: Upload SSH Key as Artifact (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh/id_rsa

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
              "tenantId":"${{ secrets.AZURE_TENANT_ID }}",
              "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            }

      - name: Ensure Resource Group Exists
        run: |
          az group create --name demo-rg --location eastus --output none || true

      - name: Ensure Virtual Machine Exists
        run: |
          az vm show --resource-group demo-rg --name demo-vm --query 'name' --output tsv || \
          az vm create \
            --resource-group demo-rg \
            --name demo-vm \
            --image UbuntuLTS \
            --admin-username azureuser \
            --public-ip-sku Standard \
            --size Standard_B2s \
            --output none

      - name: Get VM Public IP
        run: |
          ip=$(az vm list-ip-addresses \
            --resource-group demo-rg \
            --name demo-vm \
            --query "[].virtualMachine.network.publicIpAddresses[0].ipAddress" \
            --output tsv)
          echo "VM Public IP: $ip"
          echo "ip=$ip" >> $GITHUB_ENV

      - name: Open SSH Port 22
        run: |
          az network nsg rule create \
            --resource-group demo-rg \
            --nsg-name demo-vmNSG \
            --name AllowSSH \
            --priority 1001 \
            --direction Inbound \
            --access Allow \
            --protocol Tcp \
            --source-port-range "*" \
            --destination-port-range 22 \
            --output none || true

      - name: Open Port 8000 for Web Access
        run: |
          az network nsg rule create \
            --resource-group demo-rg \
            --nsg-name demo-vmNSG \
            --name AllowWeb \
            --priority 1002 \
            --direction Inbound \
            --access Allow \
            --protocol Tcp \
            --source-port-range "*" \
            --destination-port-range 8000 \
            --output none || true

      - name: Manually Add SSH Public Key to VM
        run: |
          PUBLIC_KEY=$(cat ~/.ssh/id_rsa.pub)
          az vm run-command invoke \
            --resource-group demo-rg \
            --name demo-vm \
            --command-id RunShellScript \
            --scripts "mkdir -p /home/azureuser/.ssh && echo \"$PUBLIC_KEY\" >> /home/azureuser/.ssh/authorized_keys && chmod 600 /home/azureuser/.ssh/authorized_keys && chown azureuser:azureuser /home/azureuser/.ssh/authorized_keys"

      - name: Verify SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} "echo SSH Connection Successful"

      - name: Install Dependencies on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.ip }}
          username: azureuser
          key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv git

      - name: Copy Application Code to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.ip }}
          username: azureuser
          key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/app"

      - name: Install Dependencies and Start Python App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.ip }}
          username: azureuser
          key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            nohup gunicorn --workers 3 --bind 0.0.0.0:8000 app:app &
